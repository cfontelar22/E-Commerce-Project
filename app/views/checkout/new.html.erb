<%= form_with model: @order, url: orders_path, method: :post, local: true, data: { turbo: false }, class: 'checkout-form', id: 'payment-form' do |form| %>
  <div class="checkout-form-card">
    <% if current_customer.address.blank? || current_customer.city.blank? || current_customer.province.blank? || current_customer.postal_code.blank? || current_customer.phone_number.blank? %>
      <div class="customer-details">
        <h3>Shipping Address</h3>
        
        <div class="form-group">
          <%= form.label :address, class: 'form-label' %>
          <%= form.text_field :address, value: current_customer.address, class: 'form-control' %>
        </div>
        <div class="form-group">
          <%= form.label :city, class: 'form-label' %>
          <%= form.text_field :city, value: current_customer.city, class: 'form-control' %>
        </div>
        <div class="form-group">
          <%= form.label :province, class: 'form-label' %>
          <%= form.select :province, options_for_select(@provinces_in_canada.keys, selected: current_customer.province), {}, { class: 'form-select' } %>
        </div>
        <div class="form-group">
          <%= form.label :postal_code, class: 'form-label' %>
          <%= form.text_field :postal_code, value: current_customer.postal_code, class: 'form-control' %>
        </div>
        <div class="form-group">
          <%= form.label :phone_number, class: 'form-label' %>
          <%= form.telephone_field :phone_number, value: current_customer.phone_number, class: 'form-control' %>
        </div>
      </div>
    <% end %>

    <div class="order-summary checkout-section">
    <h3 class="checkout-header">Checkout Summary</h3>
    <% @cart.items.each_with_index do |item, index| %>
      <% product = Product.find(item["product_id"]) %>
      <%= form.hidden_field :order_items_attributes, name: "order[order_items_attributes][#{index}][product_id]", value: item["product_id"] %>
      <%= form.hidden_field :order_items_attributes, name: "order[order_items_attributes][#{index}][quantity]", value: item["quantity"] %>
      <div class="order-item">
        <p>Product Name: <%= product.name %></p>
        <p>Quantity: <%= item["quantity"] %></p>
      </div>
    <% end %>
  </div>

  <div class="payment-details checkout-section">
    <h3 class="checkout-header">Payment Details</h3>
    <div class="form-group">
      <%= form.label :name_on_card, 'Name on Card', class: 'form-label' %>
      <%= form.text_field :name_on_card, class: 'form-control' %>
    </div>

    <!-- Card Elements inserted by Stripe.js here -->
    <div id="card-element" class="my-3">
      <!-- A Stripe Element will be inserted here. -->
    </div>
    
    <!-- Error messages for card element -->
    <div id="card-errors" role="alert"></div>

    <%= form.submit "Place Order", class: 'btn btn-primary place-order-btn', data: { disable_with: "Processing..." } %>
    </div>
</div>
<% end %>

<script src="https://js.stripe.com/v3/"></script>
<script>
  var stripe = Stripe('pk_test_51P5JfjRpR0Y1Q4s6nEsjr0CPqLuA3mUwb75KpBnz1HF1KIfro48IJn1CzfaofYPrVU0JqeOT7dcZmP9maoKSB8Cw00maVXj0jP');
  var elements = stripe.elements();
  var style = {
    base: {
      fontSize: '16px',
      color: "#32325d",
    }
  };

  var card = elements.create('card', {style: style});
  card.mount('#card-element');

  var form = document.querySelector('.checkout-form');
  var submitButton = form.querySelector('.place-order-btn');
  var formSubmitted = false; // Flag to indicate form submission

  form.addEventListener('submit', function(event) {
    event.preventDefault();
    if (formSubmitted) {
      console.log('Form already submitted, waiting for response...');
      return; // Prevent further processing if the form is already submitted
    }

    submitButton.disabled = true;
    submitButton.textContent = 'Processing...';

    stripe.createToken(card).then(function(result) {
      if (result.error) {
        console.log('Error creating token:', result.error);
        submitButton.disabled = false;
        submitButton.textContent = 'Place Order';
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        console.log('Token created:', result.token);
        formSubmitted = true; // Set the flag as the form is now submitted
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', result.token.id);
        form.appendChild(hiddenInput);
        form.submit(); // Actual form submission
      }
    });
  });
</script>
